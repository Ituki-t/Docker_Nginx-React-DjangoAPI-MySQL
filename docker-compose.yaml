version: '3.8'

services:

  db: 
    container_name: db
    # image: mysql:8.0
    build: 
      context: .
      dockerfile: ./db/dockerfile
    env_file: 
      - .env
    environment: 
      - DB_PORT=${DB_PORT}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - ./db/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      # - ./db/mysql/my.cnf:/etc/mysql/conmy.cnf
      - mysql_data:/var/lib/mysql
    # expose:
    #   - 3306
    ports: 
      - "3306:3306"


  api:
    container_name: api
    build:
      context: .
      dockerfile: ./api/dockerfile
    env_file:
      - .env
    environment:
      - MYSQL_HOST=db
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}  
    volumes:
      - ./api/django/django_comment_api+:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
  

  app:
    container_name: app
    build:
      context: .
      dockerfile: ./app/dockerfile
    volumes:
      - ./app/react/react_comment_app:/app/react_comment_app
      - react_node_modules:/app/react_comment_app/node_modules
    ports:
      - "3000:3000"
    # expose:
    #   - "3000"
    
  web:
    container_name: web
    build:
      context: .
      dockerfile: ./web/dockerfile
    volumes:
      - ./web/nginx/:/etc/nginx/conf.d
    ports:
      - "80:80"
    depends_on:
      - app


volumes:
  react_node_modules:
  mysql_data: